name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (omit to auto-detect from gradle.properties)'
        required: false

jobs:
  release:
    name: Publish Plugin
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true

      - name: Determine release version
        id: vars
        run: |
          if [ -z "${{ inputs.version }}" ]; then
            RAW=$(grep '^pluginVersion=' gradle.properties | cut -d= -f2)
            PLUGIN_VERSION=${RAW%-SNAPSHOT}
          else
            PLUGIN_VERSION="${{ inputs.version }}"
          fi
          echo "PLUGIN_VERSION=${PLUGIN_VERSION}" >> $GITHUB_ENV
          echo "version=${PLUGIN_VERSION}" >> $GITHUB_OUTPUT

      - name: Bump gradle.properties → release version
        run: |
          ./scripts/set_release_version.sh "${{ steps.vars.outputs.version }}"
          echo "Releasing v${{ steps.vars.outputs.version }}"

      - name: Publish Plugin
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
          CERTIFICATE_CHAIN: ${{ secrets.CERTIFICATE_CHAIN }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}
        run: ./gradlew publishPlugin

      - name: Patch CHANGELOG
        run: ./gradlew patchChangelog

      - name: Grab changelog
        id: changelog
        run: |
          set +e
          OUTPUT=$(./gradlew getChangelog \
            --no-header \
            --project-version="${{ steps.vars.outputs.version }}" \
            -q \
            --console=plain \
            --no-summary 2>/dev/null)
          STATUS=$?
          set -e
          
          if [ $STATUS -ne 0 ]; then
            # version missing → empty
            OUTPUT=""
          fi
          
          # export to GitHub Actions output
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Commit and tag release
        run: |
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git diff --quiet || git commit -am "chore(release): v${{ steps.vars.outputs.version }}"
          git tag "v${{ steps.vars.outputs.version }}"
          git push origin HEAD:main
          git push origin "v${{ steps.vars.outputs.version }}"

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ steps.vars.outputs.version }}" \
            build/distributions/* \
            --title "v${{ steps.vars.outputs.version }}" \
            --notes "${{ steps.changelog.outputs.changelog }}"

      - name: Bump gradle.properties → next SNAPSHOT version
        run: |
          NEW_VERSION=$(./scripts/ci_new_snapshot.sh)
          git diff --quiet || git commit -am "chore(bump): ${NEW_VERSION}"
          git push origin HEAD:main
